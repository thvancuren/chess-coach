version: '3.8'

services:
  db:
    image: postgres:16
    environment:
      POSTGRES_DB: chesscoach
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    environment:
      - POSTGRES_URL=postgresql+psycopg://postgres:postgres@db:5432/chesscoach
      - REDIS_URL=redis://redis:6379/0
      - STOCKFISH_PATH=/engines/stockfish/stockfish
      - ANALYSIS_DEPTH=20
      - CHESSCOM_USER_AGENT=chess-coach/0.1 (contact@example.com)
      - HUMAN_INDEX_PATH=/data/human_index.sqlite
      - DEBUG=true
    volumes:
      - ./data:/data
      - ./apps/backend:/app
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: sh -c "alembic upgrade head && python -m app.worker & uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    command: npm run dev

volumes:
  postgres_data:
  redis_data:


